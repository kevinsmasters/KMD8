<?php

/**
 * @file
 * Bootstrap4 theme file.
 */

use Drupal\Core\Asset\AttachedAssetsInterface;
use Drupal\Core\Form\FormStateInterface;
use Leafo\ScssPhp\Compiler;

/**
 * Implements hook_form_FORM_ID_alter().
 */
function bootstrap4_form_system_theme_settings_alter(&$form, FormStateInterface $form_state, $form_id = NULL) {
  // Work-around for a core bug affecting admin themes. See issue #943212.
  if (isset($form_id)) {
    return;
  }

  $options_bootstrap = [
    '0' => 'None',
    '4.3.1' => '4.3.1',
    '4.2.1' => '4.2.1',
    '4.1.3' => '4.1.3',
    '4.0.0' => '4.0.0',
  ];

  $options = [
    'light' => 'light',
    'dark' => 'dark',
    'custom' => 'custom',
  ];

  $options_bg = [
    'light' => 'light',
    'dark' => 'dark',
    'primary' => 'primary',
    'secondary' => 'secondary',
    'success' => 'success',
    'custom' => 'custom',
  ];

  $options_top_container = [
    'container' => 'fixed',
    'container-fluid m-0 p-0' => 'fluid',
  ];

  $form['b4_cdn_version_css'] = [
    '#type' => 'select',
    '#title' => t('CDN CSS version:'),
    '#default_value' => (theme_get_setting('b4_cdn_version_css') !== NULL) ? theme_get_setting('b4_cdn_version_css') : '4.2.1',
    '#description' => t("Select CDN CSS version or switch it off."),
    '#options' => $options_bootstrap,
  ];

  $form['b4_cdn_version_js'] = [
    '#type' => 'select',
    '#title' => t('CDN JS version:'),
    '#default_value' => (theme_get_setting('b4_cdn_version_js') !== NULL) ? theme_get_setting('b4_cdn_version_js') : '4.2.1',
    '#description' => t("Select CDN JavaScript version or switch it off."),
    '#options' => $options_bootstrap,
  ];

  $form['b4_navbar_schema'] = [
    '#type' => 'select',
    '#title' => t('Navbar:'),
    '#default_value' => theme_get_setting('b4_navbar_schema'),
    '#description' => t("Color scheme of the navbar."),
    '#options' => $options,
  ];

  $form['b4_navbar_bg_schema'] = [
    '#type' => 'select',
    '#title' => t('Navbar: background'),
    '#default_value' => theme_get_setting('b4_navbar_bg_schema'),
    '#description' => t("Background color scheme of the navbar."),
    '#options' => $options_bg,
  ];

  $form['b4_top_container'] = [
    '#type' => 'select',
    '#title' => t('Website container type'),
    '#default_value' => theme_get_setting('b4_top_container'),
    '#description' => t("Type of top level container: fluid (eg edge to edge) or fixed width"),
    '#options' => $options_top_container,
  ];

  $form['b4_scss'] = [
    '#type' => 'textarea',
    '#title' => t('SCSS'),
    '#default_value' => theme_get_setting('b4_scss'),
    '#description' => t("SCSS to be compiled to CSS."),
  ];

  // Additional submit handler.
  $form['#submit'][] = 'bootstrap4_form_system_theme_settings_submit';
}

/**
 * Submit callback: bootstrap4 settings.
 */
function bootstrap4_form_system_theme_settings_submit($form, FormStateInterface $form_state) {
  $active_theme = \Drupal::service('theme.manager')->getActiveTheme()->getName();
  $css_filename = $active_theme . '.sass.css';
  _bootstrap4_sass_compile($css_filename);
}

/**
 * Implements template_preprocess_page().
 */
function bootstrap4_preprocess_page(&$variables) {
  // Pass variables to theme.
  $variables['b4_navbar_schema'] = theme_get_setting('b4_navbar_schema');
  $variables['b4_navbar_bg_schema'] = theme_get_setting('b4_navbar_bg_schema');
  $variables['b4_top_container'] = theme_get_setting('b4_top_container');
}

/**
 * Implements template_preprocess_textarea().
 */
function bootstrap4_preprocess_textarea(&$variables) {
  $variables['attributes']['class'][] = 'form-control';
}

/**
 * Implements template_preprocess_datetime_form().
 */
function bootstrap4_preprocess_datetime_form(&$variables) {
  $variables['attributes']['class'][] = 'form-inline';
}

/**
 * Implements hook_js_alter().
 */
function bootstrap4_js_alter(&$javascript, AttachedAssetsInterface $assets) {

  $default_cdn = '4.2.1';
  $new_cdn = theme_get_setting('b4_cdn_version_js');
  $default_js_file = 'https://stackpath.bootstrapcdn.com/bootstrap/' . $default_cdn . '/js/bootstrap.min.js';
  $new_js_file = 'https://stackpath.bootstrapcdn.com/bootstrap/' . $new_cdn . '/js/bootstrap.min.js';

  // Process bootstrap CDN.
  if (isset($javascript[$default_js_file])) {
    if ($new_cdn === '0') {
      // Remove CDN completely.
      unset($javascript[$default_js_file]);
    }
    elseif ($new_cdn !== NULL) {

      // Replace default CDN with another version.
      if (array_key_exists($default_js_file, $javascript)) {
        $javascript[$default_js_file]['data'] = $new_js_file;
        $javascript[$default_js_file]['version'] = $new_cdn;

        $css_keys = array_keys($javascript);
        $css_keys[array_search($default_js_file, $css_keys)] = $new_js_file;
        $javascript = array_combine($css_keys, $javascript);
      }
    }
  }
}

/**
 * Implements hook_css_alter().
 */
function bootstrap4_css_alter(&$css, AttachedAssetsInterface $assets) {

  $active_theme = \Drupal::service('theme.manager')->getActiveTheme()->getName();
  $default_cdn = '4.2.1';
  $new_cdn = theme_get_setting('b4_cdn_version_css');
  $default_css_file = 'https://stackpath.bootstrapcdn.com/bootstrap/' . $default_cdn . '/css/bootstrap.min.css';
  $new_css_file = 'https://stackpath.bootstrapcdn.com/bootstrap/' . $new_cdn . '/css/bootstrap.min.css';

  // Process bootstrap CDN.
  if (isset($css[$default_css_file])) {
    if ($new_cdn === '0') {
      // Remove CDN completely.
      unset($css[$default_css_file]);
    }
    elseif ($new_cdn !== NULL) {

      // Replace default CDN with another version.
      if (array_key_exists($default_css_file, $css)) {
        $css[$default_css_file]['data'] = $new_css_file;
        $css[$default_css_file]['version'] = $new_cdn;

        $css_keys = array_keys($css);
        $css_keys[array_search($default_css_file, $css_keys)] = $new_css_file;
        $css = array_combine($css_keys, $css);
      }
    }
  }

  // Compile SASS and attach it to libraries.
  $path_full = \Drupal::service('file_system')->realpath('public://' . $active_theme);
  $css_path = str_replace(DRUPAL_ROOT . '/', '', $path_full);
  $css_filename = $active_theme . '.sass.css';

  foreach (array_keys($css) as $original_css) {
    if (strpos($original_css, 'bootstrap4/css/bootstrap4.sass.css') > 0) {

      if (isset($css[$original_css])) {
        _bootstrap4_sass_compile($css_filename);
        $css[$css_path . '/' . $css_filename] = $css[$original_css];
        $css[$css_path . '/' . $css_filename]['data'] = $css_path . '/' . $css_filename;

        unset($css[$original_css]);
      }

      break;
    }
  }
}

/**
 * Callback to compile SASS.
 */
function _bootstrap4_sass_compile($css_filename) {

  $active_theme = \Drupal::service('theme.manager')->getActiveTheme()->getName();
  $dirname = 'public://' . $active_theme;

  // Compile SCSS into CSS.
  if (!file_exists($dirname)) {
    \Drupal::service('file_system')->mkdir($dirname, NULL, TRUE);
  }
  $scss = new Compiler();
  $drupal_scss = theme_get_setting('b4_scss', $active_theme);
  file_put_contents($dirname . '/' . $css_filename, $scss->compile($drupal_scss));

  drupal_flush_all_caches();
}
